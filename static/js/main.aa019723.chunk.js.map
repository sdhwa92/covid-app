{"version":3,"sources":["components/Modal.js","helpers/api.js","components/Header.js","components/DoughnutChart.js","components/LineChart.js","components/BarChart.js","components/Summary.js","components/Contents.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","useState","selectedCountry","setSelectedCountry","className","isModal","aria-label","onClick","onToggleModal","countryOptions","map","item","ISO2","country","Country","onSelectCountry","axios","create","baseURL","Header","countryData","setCountryData","setIsModal","useEffect","a","getCountriesApiCall","API","get","then","res","orderedData","data","sort","b","role","DoughnutChart","options","titleText","legend","display","position","legendPos","LineChart","BarChart","Summary","setSummaryData","updatedDate","setUpdatedDate","topTotalData","setTopTotalData","apiCalls","filterData","Countries","dataDate","Date","date","getDate","month","getMonth","year","getFullYear","countriesData","processedData","TotalConfirmed","reduce","acc","cur","curIndex","rank","push","top20Countries","slice","find","selectedCountryData","TotalDeaths","TotalRecovered","ID","Contents","monthWords","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","summarisedData","setSummarisedData","items","arr","currentDate","active","Active","confirmed","Confirmed","deaths","Deaths","recovered","Recovered","foundItem","labels","datasets","label","backgroundColor","fill","borderColor","lastData","length","Footer","href","App","select","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa019723.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Modal.scss';\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [selectedCountry, setSelectedCountry] = useState(props.selectedCountry);\r\n\r\n  const submitCountry = () => {\r\n    // console.log(selectedCountry);\r\n    props.onSelectCountry(selectedCountry);\r\n    props.onToggleModal(false);\r\n  }\r\n\r\n  return (\r\n    <div className={`modal ${props.isModal ? 'is-active' : ''}`}>\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">Choose Country</p>\r\n          <button className=\"delete\" aria-label=\"close\" onClick={() => props.onToggleModal(false)}></button>\r\n        </header>\r\n        <section className=\"modal-card-body\">\r\n          <div className=\"panel\">\r\n            {props.countryOptions.map(item => (\r\n              <a className={`panel-block ${item.ISO2 === selectedCountry.ISO2 ? 'is-active' : ''}`} \r\n                  key={item.ISO2} \r\n                  onClick={() => {setSelectedCountry({ISO2: item.ISO2, country: item.Country})}}>\r\n                    {item.Country}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </section>\r\n        <footer className=\"modal-card-foot\">\r\n          <button className=\"button is-success\" onClick={submitCountry}>Select</button>\r\n          <button className=\"button\" onClick={() => props.onToggleModal(false)}>Cancel</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.covid19api.com/'\r\n});","import React, { useEffect, useState } from 'react';\r\nimport '../styles/Header.scss';\r\nimport Modal from './Modal';\r\n\r\nimport API from '../helpers/api';\r\n\r\nconst Header = (props) => {\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [isModal, setIsModal] = useState(false);\r\n  \r\n  useEffect( async () => {\r\n    getCountriesApiCall();\r\n  }, []);\r\n\r\n  const getCountriesApiCall = () => {\r\n    API.get('countries')\r\n    .then((res) => {\r\n      const orderedData = res.data.sort((a, b) => a.Country > b.Country ? 1 : (b.Country > a.Country ? -1 : 0));\r\n      setCountryData(orderedData);\r\n    });\r\n  }; \r\n\r\n  // @TODO: Context를 사용하여 flag 불러오기\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"navbar is-light\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"navbar-brand\">\r\n          <h1 className=\"navbar-item\">\r\n            COVID-19 STATUS\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item\">\r\n            <div className=\"buttons\">\r\n              <a className=\"button is-primary\" onClick={() => setIsModal(true)}>\r\n                <strong>{props.selectedCountry.country}</strong>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <Modal \r\n        isModal={isModal} \r\n        onToggleModal={(isModal) => {setIsModal(isModal)}}\r\n        countryOptions={countryData} \r\n        selectedCountry={props.selectedCountry} \r\n        onSelectCountry={props.onSelectCountry} />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nconst DoughnutChart = (props) => {\r\n  const monthWords = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n\r\n\r\n  return (\r\n    <Doughnut data={props.data} options={\r\n      {\r\n        title: {\r\n          display: true,\r\n          text: props.titleText,\r\n          fontSize: 16\r\n        }\r\n      },\r\n      {\r\n        legend: {\r\n          display: true,\r\n          position: props.legendPos\r\n        }\r\n      }\r\n    } />\r\n  )\r\n}\r\n\r\nexport default DoughnutChart\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst LineChart = (props) => {\r\n  return (\r\n    <Line data={props.data} options={\r\n      {\r\n        title: {\r\n          display: true,\r\n          text: props.titleText,\r\n          fontSize: 16\r\n        }\r\n      },\r\n      {\r\n        legend: {\r\n          display: true,\r\n          position: props.legendPos\r\n        }\r\n      }\r\n    } />\r\n  )\r\n}\r\n\r\nexport default LineChart\r\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst BarChart = (props) => {\r\n  return (\r\n    <Bar data={props.data} options={\r\n      {\r\n        title: {\r\n          display: true,\r\n          text: props.titleText,\r\n          fontSize: 16\r\n        }\r\n      },\r\n      {\r\n        legend: {\r\n          display: true,\r\n          position: props.legendPos\r\n        }\r\n      }\r\n    } />\r\n  )\r\n}\r\n\r\nexport default BarChart\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport API from '../helpers/api';\r\n\r\nconst Summary = (props) => {\r\n\r\n  const [summaryData, setSummaryData] = useState();\r\n  const [updatedDate, setUpdatedDate] = useState();\r\n  const [topTotalData, setTopTotalData] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    apiCalls();\r\n  }, [props.selectedCountry]);\r\n\r\n  const apiCalls = () => {\r\n    API.get('summary')\r\n    .then((res) => {\r\n      // console.log(res);\r\n      setSummaryData(res.data);\r\n      setTopTotalData(filterData(res.data.Countries));\r\n\r\n\r\n      const dataDate = new Date(res.data.Date);\r\n      const date = dataDate.getDate();\r\n      const month = dataDate.getMonth() + 1;\r\n      const year = dataDate.getFullYear();\r\n      setUpdatedDate(`${date}/${month}/${year}`);\r\n    });\r\n  };\r\n\r\n  const filterData = (countriesData) => {\r\n    const sortedData = countriesData.sort((a, b) => {\r\n      if (a.TotalConfirmed > b.TotalConfirmed) {\r\n        return -1;\r\n      }\r\n      else if (b.TotalConfirmed > a.TotalConfirmed) {\r\n        return 1;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    });\r\n    // console.log(sortedData);\r\n\r\n    const processedData = sortedData.reduce((acc, cur, curIndex) => {\r\n      // console.log(cur);\r\n      const data = {\r\n        ...cur,\r\n        rank: curIndex + 1 \r\n      };\r\n\r\n      acc.push(data);\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    let top20Countries = processedData.slice(0, 20);\r\n    \r\n    if (!top20Countries.find(item => item.Country === props.selectedCountry.country)) {\r\n      // console.log(\"Not in top 20\");\r\n\r\n      const selectedCountryData = processedData.find(item => item.Country === props.selectedCountry.country);\r\n      top20Countries = [\r\n        ...top20Countries,\r\n        selectedCountryData\r\n      ];\r\n    }\r\n\r\n    return top20Countries;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"title\">Covid Situation by Country on {updatedDate}</p>\r\n      <div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th></th>\r\n              <th>Country</th>\r\n              <th>Total Confirmed</th>\r\n              <th>Total Deaths</th>\r\n              <th>Total Recovered</th>\r\n            </tr>\r\n          </thead>\r\n          <tfoot>\r\n            <tr>\r\n              <th>#</th>\r\n              <th></th>\r\n              <th>Country</th>\r\n              <th>Total Confirmed</th>\r\n              <th>Total Deaths</th>\r\n              <th>Total Recovered</th>\r\n            </tr>\r\n          </tfoot>\r\n          <tbody>\r\n            {topTotalData.map((data) => (\r\n              <tr className={data.Country === props.selectedCountry.country ? 'is-selected' : ''} key={data.ID}>\r\n                <td><strong>{data.rank}</strong></td>\r\n                <td></td>\r\n                <td>{data.Country}</td>\r\n                <td>{data.TotalConfirmed}</td>\r\n                <td>{data.TotalDeaths}</td>\r\n                <td>{data.TotalRecovered}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Summary\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport LineChart from './LineChart';\r\nimport BarChart from './BarChart';\r\n\r\nimport API from '../helpers/api';\r\nimport Summary from './Summary';\r\n\r\nconst Contents = (props) => {\r\n\r\n  const monthWords = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n  const [confirmedData, setConfirmedData] = useState({});\r\n  const [quarantinedData, setQuarantinedData] = useState({});\r\n  const [summarisedData, setSummarisedData] = useState({});\r\n\r\n  useEffect(() => {\r\n    apiCalls();\r\n  }, [props.selectedCountry]);\r\n\r\n  const apiCalls = () => {\r\n    API.get(`total/dayone/country/${props.selectedCountry.ISO2}`)\r\n    .then((res) => {\r\n      filterData(res.data);\r\n    });\r\n  };\r\n\r\n  const filterData = (items) => {\r\n    const arr = items.reduce((acc, cur) => {\r\n\r\n      const currentDate = new Date(cur.Date);\r\n      const year = currentDate.getFullYear();\r\n      const month = currentDate.getMonth();\r\n      const date = currentDate.getDate();\r\n      const active = cur.Active;\r\n      const confirmed = cur.Confirmed;\r\n      const deaths = cur.Deaths;\r\n      const recovered = cur.Recovered;\r\n\r\n      const foundItem = acc.find((item) => item.year === year && item.month === month);\r\n\r\n      if (!foundItem) {\r\n        acc.push({year, month, date, active, confirmed, deaths, recovered});\r\n      } \r\n      \r\n      if (foundItem && foundItem.date < date) {\r\n        foundItem.date = date;\r\n        foundItem.active = active;\r\n        foundItem.confirmed = confirmed;\r\n        foundItem.deaths = deaths;\r\n        foundItem.recovered = recovered;\r\n      }\r\n      \r\n      // console.log(cur, curYear, curMonth, curDate);\r\n\r\n      return acc;\r\n    }, []);\r\n    // console.log(arr);\r\n\r\n    const labels = arr.map(a => `${monthWords[a.month]}-${a.year}`);\r\n    setConfirmedData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Cumulative Confirmed Cases\",\r\n          backgroundColor: \"salmon\",\r\n          fill: true,\r\n          data: arr.map(a => a.confirmed)\r\n        }\r\n      ]\r\n    });\r\n\r\n    setQuarantinedData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Quarantined Cases\",\r\n          borderColor: \"salmon\",\r\n          fill: false,\r\n          data: arr.map(a => a.active)\r\n        }\r\n      ]\r\n    });\r\n\r\n    const lastData = arr[arr.length - 1];\r\n    setSummarisedData({\r\n      labels: [\"Confirmed\", \"Recovered\", \"Deaths\"],\r\n      datasets: [\r\n        {\r\n          label: \"Confirmed, Recovered, Deaths ratio\",\r\n          backgroundColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\r\n          borderColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\r\n          fill: false,\r\n          data: [lastData?.confirmed, lastData?.recovered, lastData?.deaths]\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      {/* <h1 className=\"title is-2\">COVID-19 Status</h1> */}\r\n      <div className=\"tile is-ancestor\">\r\n        <div className=\"tile is-vertical is-parent\">\r\n          <div className=\"tile is-child box\">\r\n            <p className=\"title\">Cumulative Confirmed Cases Trend</p>\r\n            <BarChart data={confirmedData} titleText={\"Cumulative Confirmed Cases Trend\"} legendPos={\"bottom\"} />\r\n          </div>\r\n\r\n          <div className=\"tile is-child box\">\r\n            <p className=\"title\">Monthly Quarantined Cases</p>\r\n            <LineChart data={quarantinedData} titleText={\"Monthly Quarantined Cases\"} legendPos={\"bottom\"} />\r\n          </div>\r\n          <div className=\"tile is-child box\">\r\n            <p className=\"title\">Cumulative Confirmed, Recovered and Deaths Cases ({monthWords[new Date().getMonth()]})</p>\r\n              <DoughnutChart data={summarisedData} titleText={`Cumulative Confirmed, Recovered and Deaths Cases (${monthWords[new Date().getMonth()]})`} legendPos={\"bottom\"} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"tile is-parent\">\r\n          <div className=\"tile is-child box\">\r\n            <Summary selectedCountry={props.selectedCountry} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contents\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>\r\n          <strong>Covid Status</strong> by <a href=\"https://iamdaehwa.com/\">Daehwa Seo</a>. The source code is licensed\r\n          <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>. <br/>The website content\r\n          is powered by <a href=\"https://covid19api.com/\">Covid 19 API</a>.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import './App.scss';\nimport Header from './components/Header';\nimport Contents from './components/Contents';\nimport { useState } from 'react';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  const [selectedCountry, setSelectedCountry] = useState({country: \"Australia\", ISO2: \"AU\"});\n\n  return (\n    <div className=\"App\"> \n      <Header selectedCountry={selectedCountry} onSelectCountry={(select) => {setSelectedCountry(select)}} />\n      <Contents selectedCountry={selectedCountry} /> \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}