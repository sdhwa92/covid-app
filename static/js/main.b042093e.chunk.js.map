{"version":3,"sources":["components/Modal.js","containers/Modal.js","components/Flag.js","containers/Flag.js","helpers/api.js","components/Header.js","containers/Header.js","components/Loading.js","components/DoughnutChart.js","components/LineChart.js","components/BarChart.js","components/Summary.js","containers/Summary.js","components/Contents.js","containers/Contents.js","components/Footer.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["Modal","props","useState","country","countryCode","selectedCountry","setSelectedCountry","className","isModal","aria-label","onClick","onToggleModal","countryOptions","map","item","ISO2","Country","onSelectCountry","connect","state","dispatch","countryData","type","Flag","availableFlags","toLowerCase","useEffect","Object","keys","includes","style","display","src","height","alt","axios","create","baseURL","Header","setCountryData","setIsModal","a","getCountriesApiCall","API","get","then","res","orderedData","data","sort","b","role","color","class","Loading","DoughnutChart","isLoading","titleText","options","legend","position","legendPos","LineChart","BarChart","Summary","updatedDate","setUpdatedDate","topTotalData","setTopTotalData","setIsLoading","apiCalls","filterData","Countries","dataDate","Date","date","getDate","month","getMonth","year","getFullYear","countriesData","processedData","TotalConfirmed","reduce","acc","cur","curIndex","rank","push","top20Countries","slice","find","selectedCountryData","overflowX","CountryCode","TotalDeaths","TotalRecovered","ID","Contents","monthWords","confirmedData","setConfirmedData","quarantinedData","setQuarantinedData","summarisedData","setSummarisedData","items","arr","currentDate","active","Active","confirmed","Confirmed","deaths","Deaths","recovered","Recovered","foundItem","labels","datasets","label","backgroundColor","fill","borderColor","lastData","length","Footer","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createStore","action","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"0QAwCeA,EArCD,SAACC,GAEb,MAA8CC,mBAAS,CAACC,QAASF,EAAME,QAASC,YAAaH,EAAMG,cAAnG,mBAAOC,EAAP,KAAwBC,EAAxB,KAOA,OACE,sBAAKC,UAAS,gBAAWN,EAAMO,QAAU,YAAc,IAAvD,UACE,qBAAKD,UAAU,qBACf,sBAAKA,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,mBAAGA,UAAU,mBAAb,4BACA,wBAAQA,UAAU,SAASE,aAAW,QAAQC,QAAS,kBAAMT,EAAMU,eAAc,SAEnF,yBAASJ,UAAU,kBAAnB,SACE,qBAAKA,UAAU,QAAf,SACGN,EAAMW,eAAeC,KAAI,SAAAC,GAAI,OAC5B,mBAAGP,UAAS,sBAAiBO,EAAKC,OAASV,EAAgBD,YAAc,YAAc,IAEnFM,QAAS,WAAOJ,EAAmB,CAACF,YAAaU,EAAKC,KAAMZ,QAASW,EAAKE,WAF9E,SAGOF,EAAKE,SAFHF,EAAKC,aAOpB,yBAAQR,UAAU,kBAAlB,UACE,wBAAQA,UAAU,oBAAoBG,QAzBxB,WACpBT,EAAMgB,gBAAgBZ,GACtBJ,EAAMU,eAAc,IAuBd,oBACA,wBAAQJ,UAAU,SAASG,QAAS,kBAAMT,EAAMU,eAAc,IAA9D,8BCXKO,eAnBmB,SAACC,GACjC,MAAO,CACLhB,QAASgB,EAAMhB,QACfC,YAAae,EAAMf,gBAIc,SAACgB,GACpC,MAAO,CACLH,gBAAiB,SAACI,GAChBD,EAAS,CACPE,KAAM,iBACNnB,QAASkB,EAAYlB,QACrBC,YAAaiB,EAAYjB,kBAMlBc,CAAiElB,GC0TjEuB,EA9UF,SAACtB,GAEZ,IAAMuB,EAAiB,CACrB,GAAM,UACN,GAAM,uBACN,GAAM,cACN,GAAM,sBACN,GAAM,WACN,GAAM,UACN,GAAM,UACN,GAAM,SACN,GAAM,aACN,GAAM,YACN,GAAM,iBACN,GAAM,UACN,GAAM,YACN,GAAM,QACN,GAAM,mBACN,GAAM,aACN,GAAM,yBACN,GAAM,WACN,GAAM,aACN,GAAM,UACN,GAAM,eACN,GAAM,WACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,sBACN,GAAM,UACN,GAAM,SACN,GAAM,UACN,GAAM,wBACN,GAAM,SACN,GAAM,UACN,GAAM,SACN,GAAM,gBACN,GAAM,WACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,0BACN,GAAM,WACN,GAAM,2BACN,GAAM,wBACN,GAAM,cACN,GAAM,iCACN,GAAM,eACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,GAAM,WACN,GAAM,aACN,GAAM,OACN,GAAM,aACN,GAAM,aACN,GAAM,mBACN,GAAM,SACN,GAAM,UACN,GAAM,UACN,GAAM,WACN,GAAM,UACN,GAAM,WACN,GAAM,qBACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,iBACN,GAAM,UACN,GAAM,QACN,GAAM,WACN,GAAM,iBACN,GAAM,UACN,GAAM,OACN,GAAM,mBACN,GAAM,aACN,GAAM,gBACN,GAAM,SACN,GAAM,QACN,GAAM,iBACN,SAAU,UACV,SAAU,mBACV,SAAU,WACV,SAAU,QACV,GAAM,UACN,GAAM,UACN,GAAM,gBACN,GAAM,WACN,GAAM,QACN,GAAM,YACN,GAAM,YACN,GAAM,SACN,GAAM,SACN,GAAM,aACN,GAAM,oBACN,GAAM,SACN,GAAM,gBACN,GAAM,YACN,GAAM,OACN,GAAM,gBACN,GAAM,SACN,GAAM,YACN,GAAM,oCACN,GAAM,WACN,GAAM,UACN,GAAM,QACN,GAAM,UACN,GAAM,YACN,GAAM,UACN,GAAM,SACN,GAAM,cACN,GAAM,QACN,GAAM,iCACN,GAAM,OACN,GAAM,OACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,UACN,GAAM,SACN,GAAM,QACN,GAAM,QACN,GAAM,aACN,GAAM,WACN,GAAM,WACN,GAAM,UACN,GAAM,wBACN,GAAM,cACN,GAAM,cACN,GAAM,SACN,GAAM,iBACN,GAAM,aACN,GAAM,OACN,GAAM,UACN,GAAM,cACN,GAAM,gBACN,GAAM,YACN,GAAM,UACN,GAAM,UACN,GAAM,YACN,GAAM,aACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,SACN,GAAM,UACN,GAAM,aACN,GAAM,eACN,GAAM,aACN,GAAM,mBACN,GAAM,kBACN,GAAM,OACN,GAAM,UACN,GAAM,WACN,GAAM,QACN,GAAM,2BACN,GAAM,aACN,GAAM,aACN,GAAM,aACN,GAAM,QACN,GAAM,YACN,GAAM,WACN,GAAM,SACN,GAAM,SACN,GAAM,WACN,GAAM,aACN,GAAM,UACN,GAAM,gBACN,GAAM,QACN,GAAM,iBACN,GAAM,UACN,GAAM,YACN,GAAM,cACN,GAAM,SACN,GAAM,QACN,GAAM,QACN,GAAM,OACN,GAAM,cACN,GAAM,OACN,GAAM,SACN,GAAM,OACN,GAAM,mBACN,GAAM,mBACN,GAAM,cACN,GAAM,WACN,GAAM,SACN,GAAM,4BACN,GAAM,mBACN,GAAM,cACN,GAAM,YACN,GAAM,WACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,GAAM,aACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,eACN,GAAM,kBACN,GAAM,aACN,GAAM,QACN,GAAM,SACN,GAAM,YACN,GAAM,+CACN,GAAM,WACN,GAAM,yBACN,GAAM,WACN,GAAM,eACN,GAAM,aACN,GAAM,UACN,GAAM,UACN,GAAM,WACN,GAAM,cACN,GAAM,iCACN,GAAM,cACN,GAAM,eACN,GAAM,QACN,GAAM,uBACN,GAAM,2BACN,GAAM,OACN,GAAM,sCACN,GAAM,OACN,GAAM,WACN,GAAM,aACN,GAAM,UACN,GAAM,cACN,GAAM,eACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,sBACN,GAAM,SACN,GAAM,SACN,GAAM,WACN,GAAM,UACN,GAAM,SACN,GAAM,uCACN,GAAM,iBACN,GAAM,gBACN,QAAS,SACT,QAAS,UACT,QAAS,WACT,QAAS,UACT,QAAS,aACT,QAAS,WACT,QAAS,cACT,QAAS,WACT,QAAS,UACT,QAAS,UACT,QAAS,SACT,QAAS,OACT,QAAS,QACT,QAAS,WACT,QAAS,UACT,QAAS,SACT,QAAS,WACT,QAAS,YACT,QAAS,gBACT,QAAS,WACT,QAAS,QACT,QAAS,WACT,QAAS,YACT,QAAS,W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","file":"static/js/main.b042093e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Modal.scss';\r\n\r\nconst Modal = (props) => {\r\n\r\n  const [selectedCountry, setSelectedCountry] = useState({country: props.country, countryCode: props.countryCode});\r\n\r\n  const submitCountry = () => {\r\n    props.onSelectCountry(selectedCountry);\r\n    props.onToggleModal(false);\r\n  }\r\n\r\n  return (\r\n    <div className={`modal ${props.isModal ? 'is-active' : ''}`}>\r\n      <div className=\"modal-background\"></div>\r\n      <div className=\"modal-card\">\r\n        <header className=\"modal-card-head\">\r\n          <p className=\"modal-card-title\">Choose Country</p>\r\n          <button className=\"delete\" aria-label=\"close\" onClick={() => props.onToggleModal(false)}></button>\r\n        </header>\r\n        <section className=\"modal-card-body\">\r\n          <div className=\"panel\">\r\n            {props.countryOptions.map(item => (\r\n              <a className={`panel-block ${item.ISO2 === selectedCountry.countryCode ? 'is-active' : ''}`} \r\n                  key={item.ISO2} \r\n                  onClick={() => {setSelectedCountry({countryCode: item.ISO2, country: item.Country})}}>\r\n                    {item.Country}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </section>\r\n        <footer className=\"modal-card-foot\">\r\n          <button className=\"button is-success\" onClick={submitCountry}>Select</button>\r\n          <button className=\"button\" onClick={() => props.onToggleModal(false)}>Cancel</button>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import { connect } from 'react-redux';\r\nimport Modal from '../components/Modal';\r\n\r\nconst mapReduxStateToReactProps = (state) => {\r\n  return {\r\n    country: state.country,\r\n    countryCode: state.countryCode\r\n  }\r\n};\r\n\r\nconst mapReduxDispatchToReactProps = (dispatch) => {\r\n  return {\r\n    onSelectCountry: (countryData) => {\r\n      dispatch({\r\n        type: 'SWITCH_COUNTRY',\r\n        country: countryData.country,\r\n        countryCode: countryData.countryCode\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps, mapReduxDispatchToReactProps)(Modal);","import React, { useEffect } from 'react'\r\n\r\nconst Flag = (props) => {\r\n\r\n  const availableFlags = {\r\n    \"ad\": \"Andorra\",\r\n    \"ae\": \"United Arab Emirates\",\r\n    \"af\": \"Afghanistan\",\r\n    \"ag\": \"Antigua and Barbuda\",\r\n    \"ai\": \"Anguilla\",\r\n    \"al\": \"Albania\",\r\n    \"am\": \"Armenia\",\r\n    \"ao\": \"Angola\",\r\n    \"aq\": \"Antarctica\",\r\n    \"ar\": \"Argentina\",\r\n    \"as\": \"American Samoa\",\r\n    \"at\": \"Austria\",\r\n    \"au\": \"Australia\",\r\n    \"aw\": \"Aruba\",\r\n    \"ax\": \"Åland Islands\",\r\n    \"az\": \"Azerbaijan\",\r\n    \"ba\": \"Bosnia and Herzegovina\",\r\n    \"bb\": \"Barbados\",\r\n    \"bd\": \"Bangladesh\",\r\n    \"be\": \"Belgium\",\r\n    \"bf\": \"Burkina Faso\",\r\n    \"bg\": \"Bulgaria\",\r\n    \"bh\": \"Bahrain\",\r\n    \"bi\": \"Burundi\",\r\n    \"bj\": \"Benin\",\r\n    \"bl\": \"Saint Barthélemy\",\r\n    \"bm\": \"Bermuda\",\r\n    \"bn\": \"Brunei\",\r\n    \"bo\": \"Bolivia\",\r\n    \"bq\": \"Caribbean Netherlands\",\r\n    \"br\": \"Brazil\",\r\n    \"bs\": \"Bahamas\",\r\n    \"bt\": \"Bhutan\",\r\n    \"bv\": \"Bouvet Island\",\r\n    \"bw\": \"Botswana\",\r\n    \"by\": \"Belarus\",\r\n    \"bz\": \"Belize\",\r\n    \"ca\": \"Canada\",\r\n    \"cc\": \"Cocos (Keeling) Islands\",\r\n    \"cd\": \"DR Congo\",\r\n    \"cf\": \"Central African Republic\",\r\n    \"cg\": \"Republic of the Congo\",\r\n    \"ch\": \"Switzerland\",\r\n    \"ci\": \"Côte d'Ivoire (Ivory Coast)\",\r\n    \"ck\": \"Cook Islands\",\r\n    \"cl\": \"Chile\",\r\n    \"cm\": \"Cameroon\",\r\n    \"cn\": \"China\",\r\n    \"co\": \"Colombia\",\r\n    \"cr\": \"Costa Rica\",\r\n    \"cu\": \"Cuba\",\r\n    \"cv\": \"Cape Verde\",\r\n    \"cw\": \"Curaçao\",\r\n    \"cx\": \"Christmas Island\",\r\n    \"cy\": \"Cyprus\",\r\n    \"cz\": \"Czechia\",\r\n    \"de\": \"Germany\",\r\n    \"dj\": \"Djibouti\",\r\n    \"dk\": \"Denmark\",\r\n    \"dm\": \"Dominica\",\r\n    \"do\": \"Dominican Republic\",\r\n    \"dz\": \"Algeria\",\r\n    \"ec\": \"Ecuador\",\r\n    \"ee\": \"Estonia\",\r\n    \"eg\": \"Egypt\",\r\n    \"eh\": \"Western Sahara\",\r\n    \"er\": \"Eritrea\",\r\n    \"es\": \"Spain\",\r\n    \"et\": \"Ethiopia\",\r\n    \"eu\": \"European Union\",\r\n    \"fi\": \"Finland\",\r\n    \"fj\": \"Fiji\",\r\n    \"fk\": \"Falkland Islands\",\r\n    \"fm\": \"Micronesia\",\r\n    \"fo\": \"Faroe Islands\",\r\n    \"fr\": \"France\",\r\n    \"ga\": \"Gabon\",\r\n    \"gb\": \"United Kingdom\",\r\n    \"gb-eng\": \"England\",\r\n    \"gb-nir\": \"Northern Ireland\",\r\n    \"gb-sct\": \"Scotland\",\r\n    \"gb-wls\": \"Wales\",\r\n    \"gd\": \"Grenada\",\r\n    \"ge\": \"Georgia\",\r\n    \"gf\": \"French Guiana\",\r\n    \"gg\": \"Guernsey\",\r\n    \"gh\": \"Ghana\",\r\n    \"gi\": \"Gibraltar\",\r\n    \"gl\": \"Greenland\",\r\n    \"gm\": \"Gambia\",\r\n    \"gn\": \"Guinea\",\r\n    \"gp\": \"Guadeloupe\",\r\n    \"gq\": \"Equatorial Guinea\",\r\n    \"gr\": \"Greece\",\r\n    \"gs\": \"South Georgia\",\r\n    \"gt\": \"Guatemala\",\r\n    \"gu\": \"Guam\",\r\n    \"gw\": \"Guinea-Bissau\",\r\n    \"gy\": \"Guyana\",\r\n    \"hk\": \"Hong Kong\",\r\n    \"hm\": \"Heard Island and McDonald Islands\",\r\n    \"hn\": \"Honduras\",\r\n    \"hr\": \"Croatia\",\r\n    \"ht\": \"Haiti\",\r\n    \"hu\": \"Hungary\",\r\n    \"id\": \"Indonesia\",\r\n    \"ie\": \"Ireland\",\r\n    \"il\": \"Israel\",\r\n    \"im\": \"Isle of Man\",\r\n    \"in\": \"India\",\r\n    \"io\": \"British Indian Ocean Territory\",\r\n    \"iq\": \"Iraq\",\r\n    \"ir\": \"Iran\",\r\n    \"is\": \"Iceland\",\r\n    \"it\": \"Italy\",\r\n    \"je\": \"Jersey\",\r\n    \"jm\": \"Jamaica\",\r\n    \"jo\": \"Jordan\",\r\n    \"jp\": \"Japan\",\r\n    \"ke\": \"Kenya\",\r\n    \"kg\": \"Kyrgyzstan\",\r\n    \"kh\": \"Cambodia\",\r\n    \"ki\": \"Kiribati\",\r\n    \"km\": \"Comoros\",\r\n    \"kn\": \"Saint Kitts and Nevis\",\r\n    \"kp\": \"North Korea\",\r\n    \"kr\": \"South Korea\",\r\n    \"kw\": \"Kuwait\",\r\n    \"ky\": \"Cayman Islands\",\r\n    \"kz\": \"Kazakhstan\",\r\n    \"la\": \"Laos\",\r\n    \"lb\": \"Lebanon\",\r\n    \"lc\": \"Saint Lucia\",\r\n    \"li\": \"Liechtenstein\",\r\n    \"lk\": \"Sri Lanka\",\r\n    \"lr\": \"Liberia\",\r\n    \"ls\": \"Lesotho\",\r\n    \"lt\": \"Lithuania\",\r\n    \"lu\": \"Luxembourg\",\r\n    \"lv\": \"Latvia\",\r\n    \"ly\": \"Libya\",\r\n    \"ma\": \"Morocco\",\r\n    \"mc\": \"Monaco\",\r\n    \"md\": \"Moldova\",\r\n    \"me\": \"Montenegro\",\r\n    \"mf\": \"Saint Martin\",\r\n    \"mg\": \"Madagascar\",\r\n    \"mh\": \"Marshall Islands\",\r\n    \"mk\": \"North Macedonia\",\r\n    \"ml\": \"Mali\",\r\n    \"mm\": \"Myanmar\",\r\n    \"mn\": \"Mongolia\",\r\n    \"mo\": \"Macau\",\r\n    \"mp\": \"Northern Mariana Islands\",\r\n    \"mq\": \"Martinique\",\r\n    \"mr\": \"Mauritania\",\r\n    \"ms\": \"Montserrat\",\r\n    \"mt\": \"Malta\",\r\n    \"mu\": \"Mauritius\",\r\n    \"mv\": \"Maldives\",\r\n    \"mw\": \"Malawi\",\r\n    \"mx\": \"Mexico\",\r\n    \"my\": \"Malaysia\",\r\n    \"mz\": \"Mozambique\",\r\n    \"na\": \"Namibia\",\r\n    \"nc\": \"New Caledonia\",\r\n    \"ne\": \"Niger\",\r\n    \"nf\": \"Norfolk Island\",\r\n    \"ng\": \"Nigeria\",\r\n    \"ni\": \"Nicaragua\",\r\n    \"nl\": \"Netherlands\",\r\n    \"no\": \"Norway\",\r\n    \"np\": \"Nepal\",\r\n    \"nr\": \"Nauru\",\r\n    \"nu\": \"Niue\",\r\n    \"nz\": \"New Zealand\",\r\n    \"om\": \"Oman\",\r\n    \"pa\": \"Panama\",\r\n    \"pe\": \"Peru\",\r\n    \"pf\": \"French Polynesia\",\r\n    \"pg\": \"Papua New Guinea\",\r\n    \"ph\": \"Philippines\",\r\n    \"pk\": \"Pakistan\",\r\n    \"pl\": \"Poland\",\r\n    \"pm\": \"Saint Pierre and Miquelon\",\r\n    \"pn\": \"Pitcairn Islands\",\r\n    \"pr\": \"Puerto Rico\",\r\n    \"ps\": \"Palestine\",\r\n    \"pt\": \"Portugal\",\r\n    \"pw\": \"Palau\",\r\n    \"py\": \"Paraguay\",\r\n    \"qa\": \"Qatar\",\r\n    \"re\": \"Réunion\",\r\n    \"ro\": \"Romania\",\r\n    \"rs\": \"Serbia\",\r\n    \"ru\": \"Russia\",\r\n    \"rw\": \"Rwanda\",\r\n    \"sa\": \"Saudi Arabia\",\r\n    \"sb\": \"Solomon Islands\",\r\n    \"sc\": \"Seychelles\",\r\n    \"sd\": \"Sudan\",\r\n    \"se\": \"Sweden\",\r\n    \"sg\": \"Singapore\",\r\n    \"sh\": \"Saint Helena, Ascension and Tristan da Cunha\",\r\n    \"si\": \"Slovenia\",\r\n    \"sj\": \"Svalbard and Jan Mayen\",\r\n    \"sk\": \"Slovakia\",\r\n    \"sl\": \"Sierra Leone\",\r\n    \"sm\": \"San Marino\",\r\n    \"sn\": \"Senegal\",\r\n    \"so\": \"Somalia\",\r\n    \"sr\": \"Suriname\",\r\n    \"ss\": \"South Sudan\",\r\n    \"st\": \"São Tomé and Príncipe\",\r\n    \"sv\": \"El Salvador\",\r\n    \"sx\": \"Sint Maarten\",\r\n    \"sy\": \"Syria\",\r\n    \"sz\": \"Eswatini (Swaziland)\",\r\n    \"tc\": \"Turks and Caicos Islands\",\r\n    \"td\": \"Chad\",\r\n    \"tf\": \"French Southern and Antarctic Lands\",\r\n    \"tg\": \"Togo\",\r\n    \"th\": \"Thailand\",\r\n    \"tj\": \"Tajikistan\",\r\n    \"tk\": \"Tokelau\",\r\n    \"tl\": \"Timor-Leste\",\r\n    \"tm\": \"Turkmenistan\",\r\n    \"tn\": \"Tunisia\",\r\n    \"to\": \"Tonga\",\r\n    \"tr\": \"Turkey\",\r\n    \"tt\": \"Trinidad and Tobago\",\r\n    \"tv\": \"Tuvalu\",\r\n    \"tw\": \"Taiwan\",\r\n    \"tz\": \"Tanzania\",\r\n    \"ua\": \"Ukraine\",\r\n    \"ug\": \"Uganda\",\r\n    \"um\": \"United States Minor Outlying Islands\",\r\n    \"un\": \"United Nations\",\r\n    \"us\": \"United States\",\r\n    \"us-ak\": \"Alaska\",\r\n    \"us-al\": \"Alabama\",\r\n    \"us-ar\": \"Arkansas\",\r\n    \"us-az\": \"Arizona\",\r\n    \"us-ca\": \"California\",\r\n    \"us-co\": \"Colorado\",\r\n    \"us-ct\": \"Connecticut\",\r\n    \"us-de\": \"Delaware\",\r\n    \"us-fl\": \"Florida\",\r\n    \"us-ga\": \"Georgia\",\r\n    \"us-hi\": \"Hawaii\",\r\n    \"us-ia\": \"Iowa\",\r\n    \"us-id\": \"Idaho\",\r\n    \"us-il\": \"Illinois\",\r\n    \"us-in\": \"Indiana\",\r\n    \"us-ks\": \"Kansas\",\r\n    \"us-ky\": \"Kentucky\",\r\n    \"us-la\": \"Louisiana\",\r\n    \"us-ma\": \"Massachusetts\",\r\n    \"us-md\": \"Maryland\",\r\n    \"us-me\": \"Maine\",\r\n    \"us-mi\": \"Michigan\",\r\n    \"us-mn\": \"Minnesota\",\r\n    \"us-mo\": \"Missouri\",\r\n    \"us-ms\": \"Mississippi\",\r\n    \"us-mt\": \"Montana\",\r\n    \"us-nc\": \"North Carolina\",\r\n    \"us-nd\": \"North Dakota\",\r\n    \"us-ne\": \"Nebraska\",\r\n    \"us-nh\": \"New Hampshire\",\r\n    \"us-nj\": \"New Jersey\",\r\n    \"us-nm\": \"New Mexico\",\r\n    \"us-nv\": \"Nevada\",\r\n    \"us-ny\": \"New York\",\r\n    \"us-oh\": \"Ohio\",\r\n    \"us-ok\": \"Oklahoma\",\r\n    \"us-or\": \"Oregon\",\r\n    \"us-pa\": \"Pennsylvania\",\r\n    \"us-ri\": \"Rhode Island\",\r\n    \"us-sc\": \"South Carolina\",\r\n    \"us-sd\": \"South Dakota\",\r\n    \"us-tn\": \"Tennessee\",\r\n    \"us-tx\": \"Texas\",\r\n    \"us-ut\": \"Utah\",\r\n    \"us-va\": \"Virginia\",\r\n    \"us-vt\": \"Vermont\",\r\n    \"us-wa\": \"Washington\",\r\n    \"us-wi\": \"Wisconsin\",\r\n    \"us-wv\": \"West Virginia\",\r\n    \"us-wy\": \"Wyoming\",\r\n    \"uy\": \"Uruguay\",\r\n    \"uz\": \"Uzbekistan\",\r\n    \"va\": \"Vatican City (Holy See)\",\r\n    \"vc\": \"Saint Vincent and the Grenadines\",\r\n    \"ve\": \"Venezuela\",\r\n    \"vg\": \"British Virgin Islands\",\r\n    \"vi\": \"United States Virgin Islands\",\r\n    \"vn\": \"Vietnam\",\r\n    \"vu\": \"Vanuatu\",\r\n    \"wf\": \"Wallis and Futuna\",\r\n    \"ws\": \"Samoa\",\r\n    \"xk\": \"Kosovo\",\r\n    \"ye\": \"Yemen\",\r\n    \"yt\": \"Mayotte\",\r\n    \"za\": \"South Africa\",\r\n    \"zm\": \"Zambia\",\r\n    \"zw\": \"Zimbabwe\"\r\n  };\r\n\r\n  const countryCode = props.countryCode ? (props.countryCode).toLowerCase() : '';\r\n\r\n  useEffect(() => {\r\n    const availableKeys = Object.keys(availableFlags);\r\n    // console.log(countryCode);\r\n\r\n    if (!availableKeys.includes(countryCode)) {\r\n      return null;\r\n    } \r\n  }, [props.countryCode]);\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex'\r\n    }}>\r\n      <img\r\n        src={`https://flagcdn.com/h20/${countryCode}.png`}\r\n        height=\"20\"\r\n        alt={`${availableFlags[countryCode]}`} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Flag\r\n","import { connect } from 'react-redux';\r\nimport Flag from '../components/Flag';\r\n\r\nconst mapReduxStateToReactProps = (state) => {\r\n  return {\r\n    country: state.country,\r\n    countryCode: state.countryCode\r\n  }\r\n};\r\n\r\nexport default connect(mapReduxStateToReactProps)(Flag);","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.covid19api.com/'\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from '../containers/Modal';\r\nimport Flag from '../containers/Flag';\r\nimport API from '../helpers/api';\r\nimport '../styles/Header.scss';\r\n\r\nconst Header = (props) => {\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [isModal, setIsModal] = useState(false);\r\n  \r\n  useEffect( async () => {\r\n    getCountriesApiCall();\r\n  }, []);\r\n\r\n  const getCountriesApiCall = () => {\r\n    API.get('countries')\r\n    .then((res) => {\r\n      const orderedData = res.data.sort((a, b) => a.Country > b.Country ? 1 : (b.Country > a.Country ? -1 : 0));\r\n      setCountryData(orderedData);\r\n    });\r\n  }; \r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"navbar-brand\">\r\n          <h1 className=\"navbar-item\">\r\n            <strong style={{color: '#fff'}}>COVID-19 STATUS</strong>\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item\">\r\n            <div className=\"buttons\">\r\n              <a className=\"button is-white\" onClick={() => setIsModal(true)}>\r\n                <span class=\"icon\">\r\n                  <Flag />\r\n                </span>\r\n                <strong>{props.country}</strong>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <Modal \r\n        isModal={isModal} \r\n        onToggleModal={(isModal) => {setIsModal(isModal)}}\r\n        countryOptions={countryData} />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { connect } from 'react-redux';\r\nimport Header from '../components/Header';\r\n\r\nconst mapReduxStateToReactProps = (state) => {\r\n  return {\r\n    country: state.country,\r\n    countryCode: state.countryCode\r\n  }\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(Header);","import React from 'react';\r\n\r\nimport '../styles/Loading.scss';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"loader-wrapper\">\r\n      <div className=\"loader is-loading\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport Loading from './Loading';\r\n\r\nconst DoughnutChart = (props) => {\r\n  const monthWords = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n  if (props.isLoading) {\r\n    return (\r\n      <Loading />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"title\">{props.titleText}</p>\r\n      <Doughnut data={props.data} options={\r\n        {\r\n          title: {\r\n            display: true,\r\n            text: props.titleText,\r\n            fontSize: 16\r\n          }\r\n        },\r\n        {\r\n          legend: {\r\n            display: true,\r\n            position: props.legendPos\r\n          }\r\n        }\r\n      } />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DoughnutChart\r\n","import React from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport Loading from './Loading';\r\n\r\nconst LineChart = (props) => {\r\n\r\n  if (props.isLoading) {\r\n    return (\r\n      <Loading />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"title\">{props.titleText}</p>\r\n      <Line data={props.data} options={\r\n        {\r\n          title: {\r\n            display: true,\r\n            text: props.titleText,\r\n            fontSize: 16\r\n          }\r\n        },\r\n        {\r\n          legend: {\r\n            display: true,\r\n            position: props.legendPos\r\n          }\r\n        }\r\n      } />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineChart\r\n","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Loading from './Loading';\r\n\r\nconst BarChart = (props) => {\r\n\r\n  if (props.isLoading) {\r\n    return (\r\n      <Loading />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"title\">{props.titleText}</p>\r\n      <Bar data={props.data} options={\r\n        {\r\n          title: {\r\n            display: true,\r\n            text: props.titleText,\r\n            fontSize: 16\r\n          }\r\n        },\r\n        {\r\n          legend: {\r\n            display: true,\r\n            position: props.legendPos\r\n          }\r\n        }\r\n      } />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default BarChart\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport API from '../helpers/api';\r\nimport Flag from './Flag';\r\nimport Loading from './Loading';\r\n\r\nconst Summary = (props) => {\r\n\r\n  const [updatedDate, setUpdatedDate] = useState();\r\n  const [topTotalData, setTopTotalData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    apiCalls();\r\n  }, [props.countryCode]);\r\n\r\n  const apiCalls = () => {\r\n    setIsLoading(true);\r\n    API.get('summary')\r\n    .then((res) => {\r\n      setTopTotalData(filterData(res.data.Countries));\r\n\r\n      const dataDate = new Date(res.data.Date);\r\n      const date = dataDate.getDate();\r\n      const month = dataDate.getMonth() + 1;\r\n      const year = dataDate.getFullYear();\r\n      setUpdatedDate(`${date}/${month}/${year}`);\r\n\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const filterData = (countriesData) => {\r\n    const sortedData = countriesData.sort((a, b) => {\r\n      if (a.TotalConfirmed > b.TotalConfirmed) {\r\n        return -1;\r\n      }\r\n      else if (b.TotalConfirmed > a.TotalConfirmed) {\r\n        return 1;\r\n      }\r\n      else {\r\n        return 0;\r\n      }\r\n    });\r\n    // console.log(sortedData);\r\n\r\n    const processedData = sortedData.reduce((acc, cur, curIndex) => {\r\n      // console.log(cur);\r\n      const data = {\r\n        ...cur,\r\n        rank: curIndex + 1 \r\n      };\r\n\r\n      acc.push(data);\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    let top20Countries = processedData.slice(0, 20);\r\n    \r\n    if (!top20Countries.find(item => item.Country === props.country)) {\r\n      const selectedCountryData = processedData.find(item => item.Country === props.country);\r\n      top20Countries = selectedCountryData ? [...top20Countries,selectedCountryData] : top20Countries;\r\n    }\r\n\r\n    return top20Countries;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Loading />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n      overflowX: \"auto\"\r\n    }}>\r\n      <p className=\"title\">Covid Situation by Country on {updatedDate}</p>\r\n      <div>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th></th>\r\n              <th>Country</th>\r\n              <th>Total Confirmed</th>\r\n              <th>Total Deaths</th>\r\n              <th>Total Recovered</th>\r\n            </tr>\r\n          </thead>\r\n          <tfoot>\r\n            <tr>\r\n              <th>#</th>\r\n              <th></th>\r\n              <th>Country</th>\r\n              <th>Total Confirmed</th>\r\n              <th>Total Deaths</th>\r\n              <th>Total Recovered</th>\r\n            </tr>\r\n          </tfoot>\r\n          <tbody>\r\n            {topTotalData.map((data) => (\r\n              <tr className={data?.Country === props.country ? 'is-selected' : ''} key={data?.ID}>\r\n                <td><strong>{data?.rank}</strong></td>\r\n                <td><Flag countryCode={data?.CountryCode}></Flag></td>\r\n                <td>{data?.Country}</td>\r\n                <td>{data?.TotalConfirmed}</td>\r\n                <td>{data?.TotalDeaths}</td>\r\n                <td>{data?.TotalRecovered}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Summary\r\n","import { connect } from 'react-redux';\r\nimport Summary from '../components/Summary';\r\n\r\nconst mapReduxStateToReactProps = (state) => {\r\n  return {\r\n    country: state.country,\r\n    countryCode: state.countryCode\r\n  }\r\n}\r\n\r\nexport default connect(mapReduxStateToReactProps)(Summary);","import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport DoughnutChart from './DoughnutChart';\r\nimport LineChart from './LineChart';\r\nimport BarChart from './BarChart';\r\nimport Summary from '../containers/Summary';\r\n\r\nimport API from '../helpers/api';\r\n\r\nconst Contents = (props) => {\r\n\r\n  const monthWords = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n  const [confirmedData, setConfirmedData] = useState({});\r\n  const [quarantinedData, setQuarantinedData] = useState({});\r\n  const [summarisedData, setSummarisedData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    apiCalls();\r\n  }, [props.countryCode]);\r\n\r\n  const apiCalls = () => {\r\n    setIsLoading(true);\r\n    API.get(`total/dayone/country/${props.countryCode}`)\r\n    .then((res) => {\r\n      filterData(res.data);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  const filterData = (items) => {\r\n    const arr = items.reduce((acc, cur) => {\r\n\r\n      const currentDate = new Date(cur.Date);\r\n      const year = currentDate.getFullYear();\r\n      const month = currentDate.getMonth();\r\n      const date = currentDate.getDate();\r\n      const active = cur.Active;\r\n      const confirmed = cur.Confirmed;\r\n      const deaths = cur.Deaths;\r\n      const recovered = cur.Recovered;\r\n\r\n      const foundItem = acc.find((item) => item.year === year && item.month === month);\r\n\r\n      if (!foundItem) {\r\n        acc.push({year, month, date, active, confirmed, deaths, recovered});\r\n      } \r\n      \r\n      if (foundItem && foundItem.date < date) {\r\n        foundItem.date = date;\r\n        foundItem.active = active;\r\n        foundItem.confirmed = confirmed;\r\n        foundItem.deaths = deaths;\r\n        foundItem.recovered = recovered;\r\n      }\r\n      \r\n      // console.log(cur, curYear, curMonth, curDate);\r\n\r\n      return acc;\r\n    }, []);\r\n    // console.log(arr);\r\n\r\n    const labels = arr.map(a => `${monthWords[a.month]}-${a.year}`);\r\n    setConfirmedData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Cumulative Confirmed Cases\",\r\n          backgroundColor: \"salmon\",\r\n          fill: true,\r\n          data: arr.map(a => a.confirmed)\r\n        }\r\n      ]\r\n    });\r\n\r\n    setQuarantinedData({\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: \"Quarantined Cases\",\r\n          borderColor: \"salmon\",\r\n          fill: false,\r\n          data: arr.map(a => a.active)\r\n        }\r\n      ]\r\n    });\r\n\r\n    const lastData = arr[arr.length - 1];\r\n    setSummarisedData({\r\n      labels: [\"Confirmed\", \"Recovered\", \"Deaths\"],\r\n      datasets: [\r\n        {\r\n          label: \"Confirmed, Recovered, Deaths ratio\",\r\n          backgroundColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\r\n          borderColor: [\"#ff3d67\", \"#059bff\", \"#ffc233\"],\r\n          fill: false,\r\n          data: [lastData?.confirmed, lastData?.recovered, lastData?.deaths]\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      {/* <h1 className=\"title is-2\">COVID-19 Status</h1> */}\r\n      <div className=\"tile is-ancestor\">\r\n        <div className=\"tile is-vertical is-parent\">\r\n          <div className=\"tile is-child box\">\r\n            <BarChart data={confirmedData} titleText={\"Cumulative Confirmed Cases Trend\"} legendPos={\"bottom\"} isLoading={isLoading} />\r\n          </div>\r\n\r\n          <div className=\"tile is-child box\">\r\n            <LineChart data={quarantinedData} titleText={\"Monthly Quarantined Cases\"} legendPos={\"bottom\"} isLoading={isLoading} />\r\n          </div>\r\n          <div className=\"tile is-child box\">\r\n            <DoughnutChart \r\n              data={summarisedData} \r\n              titleText={`Cumulative Confirmed, Recovered and Deaths Cases (${monthWords[new Date().getMonth()]})`} \r\n              legendPos={\"bottom\"} \r\n              isLoading={isLoading} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"tile is-parent\">\r\n          <div className=\"tile is-child box\">\r\n            <Summary />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contents\r\n","import { connect } from 'react-redux';\r\nimport Contents from '../components/Contents';\r\n\r\nconst mapReduxStateToReactProps = (state) => {\r\n  return {\r\n    country: state.country,\r\n    countryCode: state.countryCode\r\n  }\r\n};\r\n\r\nexport default connect(mapReduxStateToReactProps)(Contents);","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"content has-text-centered\">\r\n        <p>\r\n          <strong>Covid Status</strong> by <a href=\"https://www.linkedin.com/in/daehwa-seo-56b325110/\">Daehwa Seo</a>. The source code is licensed\r\n          <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>. <br/>The website content\r\n          is powered by <a href=\"https://covid19api.com/\">Covid 19 API</a>.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import './App.scss';\nimport Header from './containers/Header';\nimport Contents from './containers/Contents';\nimport Footer from './components/Footer';\n\nfunction App() {\n\n  return (\n    <div className=\"App\"> \n      <Header />\n      <Contents /> \n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from 'redux';\r\n\r\nexport default createStore((state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      country: 'Australia',\r\n      countryCode: 'AU'\r\n    }\r\n  }\r\n\r\n  if (action.type === 'SWITCH_COUNTRY') {\r\n    return {\r\n      ...state,\r\n      country: action.country,\r\n      countryCode: action.countryCode\r\n    }\r\n  }\r\n\r\n  return state;\r\n}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}